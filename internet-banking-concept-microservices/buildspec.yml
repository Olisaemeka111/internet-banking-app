version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      - REPOSITORY_URI=$ECR_REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Setting up JDK 21...
      - amazon-linux-extras install java-openjdk21
      - export JAVA_HOME=/usr/lib/jvm/java-21-openjdk
      - export PATH=$PATH:$JAVA_HOME/bin
      - java -version
      
      # Install security scanning tools
      - echo Installing security scanning tools...
      - pip3 install checkov
      - curl -sSL https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
      
      # Run security scans
      - echo Running security scans...
      - chmod +x ./security-scan.sh
      - ./security-scan.sh
  
  build:
    commands:
      - echo Build started on `date`
      - echo Building the application...
      - cd $(echo $CODEBUILD_SRC_DIR | sed -e "s/\/source\//\/source\/s3\//g")
      - ./gradlew clean build -x test
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - echo '[{"name":"'$(echo $REPOSITORY_URI | sed -e "s/.*\///g")'","imageUri":"'$REPOSITORY_URI:$IMAGE_TAG'"}]' > imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - appspec.yml
    - taskdef.json

cache:
  paths:
    - '/root/.gradle/caches/**/*'
    - '/root/.gradle/wrapper/**/*'
