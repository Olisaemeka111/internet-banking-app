version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto11
    commands:
      - echo Installing dependencies...
      - yum install -y curl

  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
      # Use direct image references to avoid Docker Hub rate limits
      - echo Using direct ECR Public Gallery references to avoid rate limits...
      - REPOSITORY_URI=$ECR_REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - echo Repository URI $REPOSITORY_URI
      - echo Image tag $IMAGE_TAG
      - ls -la
  
  build:
    commands:
      - echo Build started on `date`
      - cd internet-banking-concept-microservices
      - ls -la
      - cd internet-banking-config-server
      - ls -la
      - echo Building the application with Gradle...
      - chmod +x ./gradlew
      - ./gradlew clean build -x test --warning-mode all --stacktrace
      - echo Building the Docker image...
      # Pull base images before building to avoid rate limits
      - docker pull public.ecr.aws/docker/library/openjdk:11-jre-slim || true
      - pwd
      - ls -la
      - echo "FROM public.ecr.aws/docker/library/openjdk:11-jre-slim" > Dockerfile
      - echo "WORKDIR /app" >> Dockerfile
      - echo "COPY build/libs/*.jar /app/" >> Dockerfile
      - echo "ENTRYPOINT [\"java\", \"-jar\", \"/app/*.jar\"]" >> Dockerfile
      - cat Dockerfile
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - mkdir -p /codebuild/output
      - cd /codebuild/output
      - echo "[{\"name\":\"internet-banking-config-server\",\"imageUri\":\"${REPOSITORY_URI}:${IMAGE_TAG}\"}]" > imagedefinitions.json
      - cat imagedefinitions.json
      - ls -la /codebuild/output

artifacts:
  files:
    - imagedefinitions.json
  base-directory: /codebuild/output
