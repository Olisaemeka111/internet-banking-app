{
	"results": [
		{
			"rule_id": "AVD-AWS-0003",
			"long_id": "aws-api-gateway-enable-tracing",
			"rule_description": "API Gateway must have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "Without full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/api-gateway/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_stage#xray_tracing_enabled"
			],
			"description": "X-Ray tracing is not enabled,",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.api_gateway",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/api_gateway/main.tf",
				"start_line": 109,
				"end_line": 133
			}
		},
		{
			"rule_id": "AVD-AWS-0004",
			"long_id": "aws-api-gateway-no-public-access",
			"rule_description": "No unauthorized access to API Gateway methods",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "API gateway methods can be accessed without authorization.",
			"resolution": "Use and authorization method or require API Key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/api-gateway/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method#authorization"
			],
			"description": "Authorization is not enabled for this method.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.api_gateway",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/api_gateway/main.tf",
				"start_line": 79,
				"end_line": 79
			}
		},
		{
			"rule_id": "AVD-AWS-0004",
			"long_id": "aws-api-gateway-no-public-access",
			"rule_description": "No unauthorized access to API Gateway methods",
			"rule_provider": "aws",
			"rule_service": "api-gateway",
			"impact": "API gateway methods can be accessed without authorization.",
			"resolution": "Use and authorization method or require API Key",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/api-gateway/no-public-access/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/api_gateway_method#authorization"
			],
			"description": "Authorization is not enabled for this method.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.api_gateway",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/api_gateway/main.tf",
				"start_line": 48,
				"end_line": 48
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.waf",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/waf/main.tf",
				"start_line": 178,
				"end_line": 186
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/vpc/main.tf",
				"start_line": 119,
				"end_line": 122
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 93,
				"end_line": 104
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 93,
				"end_line": 104
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 93,
				"end_line": 104
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 93,
				"end_line": 104
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 93,
				"end_line": 104
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 93,
				"end_line": 104
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 93,
				"end_line": 104
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 93,
				"end_line": 104
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 93,
				"end_line": 104
			}
		},
		{
			"rule_id": "AVD-AWS-0017",
			"long_id": "aws-cloudwatch-log-group-customer-key",
			"rule_description": "CloudWatch log groups should be encrypted using CMK",
			"rule_provider": "aws",
			"rule_service": "cloudwatch",
			"impact": "Log data may be leaked if the logs are compromised. No auditing of who have viewed the logs.",
			"resolution": "Enable CMK encryption of CloudWatch Log Groups",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/cloudwatch/log-group-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/cloudwatch_log_group#kms_key_id"
			],
			"description": "Log group is not encrypted.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.api_gateway",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/api_gateway/main.tf",
				"start_line": 136,
				"end_line": 143
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.security",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security/main.tf",
				"start_line": 89,
				"end_line": 89
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.security",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security/main.tf",
				"start_line": 62,
				"end_line": 62
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.security",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security/main.tf",
				"start_line": 27,
				"end_line": 27
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.security",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security/main.tf",
				"start_line": 143,
				"end_line": 143
			}
		},
		{
			"rule_id": "AVD-AWS-0104",
			"long_id": "aws-ec2-no-public-egress-sgr",
			"rule_description": "An egress security group rule allows traffic to /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port is egressing data to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-egress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group"
			],
			"description": "Security group rule allows egress to multiple public internet addresses.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.security",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security/main.tf",
				"start_line": 116,
				"end_line": 116
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.security",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security/main.tf",
				"start_line": 19,
				"end_line": 19
			}
		},
		{
			"rule_id": "AVD-AWS-0107",
			"long_id": "aws-ec2-no-public-ingress-sgr",
			"rule_description": "An ingress security group rule allows traffic from /0.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "Your port exposed to the internet",
			"resolution": "Set a more restrictive cidr range",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ingress-sgr/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/security_group_rule#cidr_blocks"
			],
			"description": "Security group rule allows ingress from public internet.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.security",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security/main.tf",
				"start_line": 11,
				"end_line": 11
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/vpc/main.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/vpc/main.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0164",
			"long_id": "aws-ec2-no-public-ip-subnet",
			"rule_description": "Instances in a subnet should not receive a public IP address by default.",
			"rule_provider": "aws",
			"rule_service": "ec2",
			"impact": "The instance is publicly accessible",
			"resolution": "Set the instance to not be publicly accessible",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ec2/no-public-ip-subnet/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet#map_public_ip_on_launch"
			],
			"description": "Subnet associates public IP address.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/vpc/main.tf",
				"start_line": 17,
				"end_line": 17
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 148,
				"end_line": 148
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 148,
				"end_line": 148
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 148,
				"end_line": 148
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 148,
				"end_line": 148
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 148,
				"end_line": 148
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 148,
				"end_line": 148
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 148,
				"end_line": 148
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 148,
				"end_line": 148
			}
		},
		{
			"rule_id": "AVD-AWS-0031",
			"long_id": "aws-ecr-enforce-immutable-repository",
			"rule_description": "ECR images tags shouldn't be mutable.",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Image tags could be overwritten with compromised images",
			"resolution": "Only use immutable images in ECR",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/enforce-immutable-repository/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository"
			],
			"description": "Repository tags are mutable.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 148,
				"end_line": 148
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 144,
				"end_line": 153
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 144,
				"end_line": 153
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 144,
				"end_line": 153
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 144,
				"end_line": 153
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 144,
				"end_line": 153
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 144,
				"end_line": 153
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 144,
				"end_line": 153
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 144,
				"end_line": 153
			}
		},
		{
			"rule_id": "AVD-AWS-0033",
			"long_id": "aws-ecr-repository-customer-key",
			"rule_description": "ECR Repository should use customer managed keys to allow more control",
			"rule_provider": "aws",
			"rule_service": "ecr",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Use customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/ecr/repository-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ecr_repository#encryption_configuration"
			],
			"description": "Repository is not encrypted using KMS.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 144,
				"end_line": 153
			}
		},
		{
			"rule_id": "AVD-AWS-0053",
			"long_id": "aws-elb-alb-not-public",
			"rule_description": "Load balancer is exposed to the internet.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "The load balancer is exposed on the internet",
			"resolution": "Switch to an internal load balancer or add a tfsec ignore",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/elb/alb-not-public/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb"
			],
			"description": "Load balancer is exposed publicly.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 123,
				"end_line": 123
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 136,
				"end_line": 148
			}
		},
		{
			"rule_id": "AVD-AWS-0052",
			"long_id": "aws-elb-drop-invalid-headers",
			"rule_description": "Load balancers should drop invalid headers",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Invalid headers being passed through to the target of the load balance may exploit vulnerabilities",
			"resolution": "Set drop_invalid_header_fields to true",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/elb/drop-invalid-headers/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb#drop_invalid_header_fields"
			],
			"description": "Application load balancer is not set to drop invalid headers.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 121,
				"end_line": 133
			}
		},
		{
			"rule_id": "AVD-AWS-0054",
			"long_id": "aws-elb-http-not-used",
			"rule_description": "Use of plain HTTP.",
			"rule_provider": "aws",
			"rule_service": "elb",
			"impact": "Your traffic is not protected",
			"resolution": "Switch to HTTPS to benefit from TLS security features",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/elb/http-not-used/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lb_listener"
			],
			"description": "Listener for application load balancer does not use HTTPS.",
			"severity": "CRITICAL",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 252,
				"end_line": 252
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'logs:CreateLogGroup' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.vpc",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/vpc/main.tf",
				"start_line": 146,
				"end_line": 146
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 's3:GetObject' on wildcarded resource '4b38704c-2d4f-4bf2-8ccf-70c73b906508'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/pipeline.tf",
				"start_line": 87,
				"end_line": 87
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'codebuild:BatchGetBuilds' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/pipeline.tf",
				"start_line": 87,
				"end_line": 87
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'logs:CreateLogGroup' on wildcarded resource 'arn:aws:logs:*:*:*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/pipeline.tf",
				"start_line": 191,
				"end_line": 191
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 's3:GetObject' on wildcarded resource '4b38704c-2d4f-4bf2-8ccf-70c73b906508'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/pipeline.tf",
				"start_line": 191,
				"end_line": 191
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'logs:CreateLogGroup' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/main.tf",
				"start_line": 51,
				"end_line": 51
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 's3:GetObject' on wildcarded resource '4b38704c-2d4f-4bf2-8ccf-70c73b906508'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/main.tf",
				"start_line": 51,
				"end_line": 51
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'codebuild:CreateReportGroup' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/main.tf",
				"start_line": 51,
				"end_line": 51
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 's3:GetObject' on wildcarded resource '4b38704c-2d4f-4bf2-8ccf-70c73b906508'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/main.tf",
				"start_line": 51,
				"end_line": 51
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ssm:GetParameters' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 72,
				"end_line": 72
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ssm:GetParameters' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.ecs",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/ecs/main.tf",
				"start_line": 72,
				"end_line": 72
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'iam:PassRole' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ecs:DescribeServices' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'codebuild:BatchGetBuilds' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 's3:GetObject' on wildcarded resource 'd681c2ce-6b13-4302-bb19-9a0a24e763eb'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 34,
				"end_line": 34
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 's3:GetObject' on wildcarded resource 'd681c2ce-6b13-4302-bb19-9a0a24e763eb'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 102,
				"end_line": 102
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'logs:CreateLogGroup' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 102,
				"end_line": 102
			}
		},
		{
			"rule_id": "AVD-AWS-0057",
			"long_id": "aws-iam-no-policy-wildcards",
			"rule_description": "IAM policy should avoid use of wildcards and instead apply the principle of least privilege",
			"rule_provider": "aws",
			"rule_service": "iam",
			"impact": "Overly permissive policies may grant access to sensitive resources",
			"resolution": "Specify the exact permissions required, and to which resources they should apply instead of using wildcards.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/iam/no-policy-wildcards/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/data-sources/iam_policy_document"
			],
			"description": "IAM policy document uses sensitive action 'ecr:BatchCheckLayerAvailability' on wildcarded resource '*'",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 102,
				"end_line": 102
			}
		},
		{
			"rule_id": "AVD-AWS-0066",
			"long_id": "aws-lambda-enable-tracing",
			"rule_description": "Lambda functions should have X-Ray tracing enabled",
			"rule_provider": "aws",
			"rule_service": "lambda",
			"impact": "Without full tracing enabled it is difficult to trace the flow of logs",
			"resolution": "Enable tracing",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/lambda/enable-tracing/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/lambda_function#mode"
			],
			"description": "Function does not have tracing enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/pipeline.tf",
				"start_line": 129,
				"end_line": 145
			}
		},
		{
			"rule_id": "AVD-AWS-0177",
			"long_id": "aws-rds-enable-deletion-protection",
			"rule_description": "RDS Deletion Protection Disabled",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "",
			"resolution": "Modify the RDS instances to enable deletion protection.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-deletion-protection/"
			],
			"description": "Instance does not have Deletion Protection enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.mysql.deletion_protection",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/rds/main.tf",
				"start_line": 47,
				"end_line": 47
			}
		},
		{
			"rule_id": "AVD-AWS-0177",
			"long_id": "aws-rds-enable-deletion-protection",
			"rule_description": "RDS Deletion Protection Disabled",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "",
			"resolution": "Modify the RDS instances to enable deletion protection.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-deletion-protection/"
			],
			"description": "Instance does not have Deletion Protection enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.postgres.deletion_protection",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/rds/main.tf",
				"start_line": 101,
				"end_line": 101
			}
		},
		{
			"rule_id": "AVD-AWS-0176",
			"long_id": "aws-rds-enable-iam-auth",
			"rule_description": "RDS IAM Database Authentication Disabled",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "",
			"resolution": "Modify the PostgreSQL and MySQL type RDS instances to enable IAM database authentication.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-iam-auth/"
			],
			"description": "Instance does not have IAM Authentication enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.postgres",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/rds/main.tf",
				"start_line": 80,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0176",
			"long_id": "aws-rds-enable-iam-auth",
			"rule_description": "RDS IAM Database Authentication Disabled",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "",
			"resolution": "Modify the PostgreSQL and MySQL type RDS instances to enable IAM database authentication.",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-iam-auth/"
			],
			"description": "Instance does not have IAM Authentication enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "aws_db_instance.mysql",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/rds/main.tf",
				"start_line": 26,
				"end_line": 58
			}
		},
		{
			"rule_id": "AVD-AWS-0133",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Enable Performance Insights to detect potential problems",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Without adequate monitoring, performance related issues may go unreported and potentially lead to compromise.",
			"resolution": "Enable performance insights",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.rds",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/rds/main.tf",
				"start_line": 80,
				"end_line": 112
			}
		},
		{
			"rule_id": "AVD-AWS-0133",
			"long_id": "aws-rds-enable-performance-insights",
			"rule_description": "Enable Performance Insights to detect potential problems",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Without adequate monitoring, performance related issues may go unreported and potentially lead to compromise.",
			"resolution": "Enable performance insights",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/enable-performance-insights/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster_instance#performance_insights_kms_key_id",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#performance_insights_kms_key_id"
			],
			"description": "Instance does not have performance insights enabled.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.rds",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/rds/main.tf",
				"start_line": 26,
				"end_line": 58
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.rds",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/rds/main.tf",
				"start_line": 49,
				"end_line": 49
			}
		},
		{
			"rule_id": "AVD-AWS-0077",
			"long_id": "aws-rds-specify-backup-retention",
			"rule_description": "RDS Cluster and RDS instance should have backup retention longer than default 1 day",
			"rule_provider": "aws",
			"rule_service": "rds",
			"impact": "Potential loss of data and short opportunity for recovery",
			"resolution": "Explicitly set the retention period to greater than the default",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/rds/specify-backup-retention/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/rds_cluster#backup_retention_period",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/db_instance#backup_retention_period"
			],
			"description": "Instance has very low backup retention period.",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.rds",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/rds/main.tf",
				"start_line": 103,
				"end_line": 103
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0086",
			"long_id": "aws-s3-block-public-acls",
			"rule_description": "S3 Access block should block public ACL",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable blocking any PUT calls with a public ACL specified",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/block-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_acls"
			],
			"description": "No public access block so not blocking public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0087",
			"long_id": "aws-s3-block-public-policy",
			"rule_description": "S3 Access block should block public policy",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Users could put a policy that allows public access",
			"resolution": "Prevent policies that allow public access being PUT",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/block-public-policy/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#block_public_policy"
			],
			"description": "No public access block so not blocking public policies",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0088",
			"long_id": "aws-s3-enable-bucket-encryption",
			"rule_description": "Unencrypted S3 bucket.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "The bucket objects could be read if compromised",
			"resolution": "Configure bucket encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/enable-bucket-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not have encryption enabled",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0089",
			"long_id": "aws-s3-enable-bucket-logging",
			"rule_description": "S3 Bucket does not have logging enabled.",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "There is no way to determine the access to this bucket",
			"resolution": "Add a logging block to the resource to enable access logging",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/enable-bucket-logging/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket"
			],
			"description": "Bucket does not have logging enabled",
			"severity": "MEDIUM",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0132",
			"long_id": "aws-s3-encryption-customer-key",
			"rule_description": "S3 encryption should use Customer Managed Keys",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Using AWS managed keys does not allow for fine grained control",
			"resolution": "Enable encryption using customer managed keys",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/encryption-customer-key/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket#enable-default-server-side-encryption"
			],
			"description": "Bucket does not encrypt data with a customer managed key.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0091",
			"long_id": "aws-s3-ignore-public-acls",
			"rule_description": "S3 Access Block should Ignore Public Acl",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "PUT calls with public ACLs specified can make objects public",
			"resolution": "Enable ignoring the application of public ACLs in PUT calls",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/ignore-public-acls/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#ignore_public_acls"
			],
			"description": "No public access block so not ignoring public acls",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0093",
			"long_id": "aws-s3-no-public-buckets",
			"rule_description": "S3 Access block should restrict public bucket to limit access",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public buckets can be accessed by anyone",
			"resolution": "Limit the access to public buckets to only the owner or AWS Services (eg; CloudFront)",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/no-public-buckets/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#restrict_public_buckets¡"
			],
			"description": "No public access block so not restricting public buckets",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.security_scanning",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/security_scanning/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0094",
			"long_id": "aws-s3-specify-public-access-block",
			"rule_description": "S3 buckets should each define an aws_s3_bucket_public_access_block",
			"rule_provider": "aws",
			"rule_service": "s3",
			"impact": "Public access policies may be applied to sensitive data buckets",
			"resolution": "Define a aws_s3_bucket_public_access_block for the given bucket to control public access policies",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/s3/specify-public-access-block/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/s3_bucket_public_access_block#bucket"
			],
			"description": "Bucket does not have a corresponding public access block.",
			"severity": "LOW",
			"warning": false,
			"status": 0,
			"resource": "module.codepipeline",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/codepipeline/main.tf",
				"start_line": 1,
				"end_line": 3
			}
		},
		{
			"rule_id": "AVD-AWS-0095",
			"long_id": "aws-sns-enable-topic-encryption",
			"rule_description": "Unencrypted SNS topic.",
			"rule_provider": "aws",
			"rule_service": "sns",
			"impact": "The SNS topic messages could be read if compromised",
			"resolution": "Turn on SNS Topic encryption",
			"links": [
				"https://aquasecurity.github.io/tfsec/v1.28.14/checks/aws/sns/enable-topic-encryption/",
				"https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/sns_topic#example-with-server-side-encryption-sse"
			],
			"description": "Topic does not have encryption enabled.",
			"severity": "HIGH",
			"warning": false,
			"status": 0,
			"resource": "module.monitoring",
			"location": {
				"filename": "/Users/olisa/Desktop/Internet banking  app/terraform/modules/monitoring/main.tf",
				"start_line": 186,
				"end_line": 193
			}
		}
	]
}
